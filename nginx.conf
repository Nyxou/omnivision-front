
daemon off;

user nginx;
worker_processes auto;
pid        /var/run/nginx.pid;

events {
  worker_connections 4096;
}


http {
  include             /etc/nginx/mime.types;
  default_type        application/octet-stream;

  sendfile on;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

  keepalive_timeout   65;
  gzip                on;
  gzip_static         on;

  server {
    listen          8080;
    server_name    localhost;
    

    # We don't want users getting the UI via plain HTTP
    if ($http_x_forwarded_proto = 'http') {
      return 301 https://$host$request_uri;
    }

    access_log  /dev/stdout main;
    error_log   /dev/stdout warn;

    # Gzip configuration (based on html5 BP)
    gzip              on;
    gzip_comp_level   5;
    gzip_min_length   256;
    gzip_proxied      any;
    gzip_vary         on;
    gzip_types
      application/javascript
      text/css
      text/plain
      image/svg+xml;

    root     /var/app;
    index   index.html;
    auth_basic off;
    auth_basic_user_file /var/app/.htpasswd;

    # Media: images, icons
    # Define cache time rules to 1 days
    location ~* .(?:jpg|jpeg|gif|png|ico|svg)$ {
      expires         1d;
      add_header      Cache-Control "public, max-age=86400, s-maxage=86400";
    }

    # CSS and Javascript
    # Define cache time rules to 12 hours
    location ~* .(?:js|css)$ {
      expires         12h;
      add_header      Cache-Control "public, max-age=43200, s-maxage=43200";
    }

    location / {
      try_files       $uri /index.html =404;
    }
  }

  
}
